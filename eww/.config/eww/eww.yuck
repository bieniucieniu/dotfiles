(defpoll time :interval "5s" `date +" %a %d %b %R"`)
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspacesWidget []
  (box :class "workspaces" :space-evenly "true"
    (eventbox :halign "start" :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly false
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id == current_workspace ? " " : " " }")
            )
          )
        )
      )
    )
  )
  )
(defwidget metric [label value onchange]
  (box :orientation "h"
       :visible {value != "" ? true : false}
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    "${value}%"
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange
    )
  )
)


(defwidget _network [strength offline excellent good okay slow]
  (box :class "network"
       :space-evenly false
       :spacing 8
    (box :class "label" strength)
    (label :text {strength == "" ? offline :
      strength < 26 ? slow :
        strength < 51 ? okay :
          strength < 76 ? good : excellent})))

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "0.3s"
  "scripts/get-vol")

(defpoll ramusage :interval "3s"
  "scripts/get-ram")

(defpoll battery :interval "15s"
  "scripts/get-battery")

(defpoll wifi :interval "10s"
  "scripts/get-wifi")

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric :label "󰕾 "
            :value volume
            :onchange "amixer -D pulse sset Master {}%")
    (metric :label "󰍛 "
            :value ramusage
            :onchange "")
    (metric :label "󰁹 "
            :value battery
            :onchange "")
    (_network :strength wifi :offline "󰤭 " :excellent "󰤨 " :good "󰤥 " :okay "󰤢 " :slow "󰤟 ")
  )
)

(defwidget centerWidget []
  (box :halign "center"
			(label :text "${time}")
		)
  )


(defwidget bar []
  (centerbox :orientation "h" 
    (workspacesWidget)
    (centerWidget)
    (sidestuff)
    ))


(defwindow bar
  :monitor 0
  :windowtype "dock"
  :exclusive true	
  :geometry (geometry :width "100%" :anchor "top center")
  (bar)
)
(defwindow barSide
  :monitor 1
  :windowtype "dock"
  :exclusive true	
  :geometry (geometry :width "100%" :anchor "top center")
  (centerWidget)
  )
